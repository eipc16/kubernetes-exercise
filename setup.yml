- name: Cinema Tickets App Configuration
  hosts: all
  user: vagrant
  become: yes
  roles:
    - role: gantsign.minikube
    - role: ericsysmin.kubectl
  vars:
    db:
      path: "/vagrant/db/"
      image_name: "cta_db"
      image_tag: 1.1
    backend:
      path: "/vagrant/backend/"
      image_name: "cta_core"
      image_tag: 1.1
    proxy_service_name: "kubectlproxy"
    proxy_service_src_path: "/vagrant/{{proxy_service_name}}.service"
    proxy_service_dest_path: "/etc/systemd/system/{{proxy_service_name}}.service"
    dashboard_service_name: "minikube_dashboard"
    dashboard_service_src_path: "/vagrant/{{dashboard_service_name}}.service"
    dashboard_service_dest_path: "/etc/systemd/system/{{dashboard_service_name}}.service"
    
  tasks:
    - name: "Copy {{proxy_service_name}}.service file to {{proxy_service_dest_path}}"
      copy:
        src: "{{proxy_service_src_path}}"
        dest: "{{proxy_service_dest_path}}"
        mode: 0777
      become: true
    - name: "Copy {{dashboard_service_name}}.service file to {{dashboard_service_dest_path}}"
      copy:
        src: "{{dashboard_service_src_path}}"
        dest: "{{dashboard_service_dest_path}}"
        mode: 0777
      become: true
    - name: Install Java (with update cache)
      apt:
        name: openjdk-11-jdk-headless
        update_cache: yes
    - name: Install Docker (with update cache)
      apt:
        name: docker.io
        update_cache: yes
    - name: "[Docker] Ensure `docker` group exists"
      group:
        name: docker
        state: present
    - name: "[Docker] Grant user privileges"
      user:
        name: "{{ansible_user}}"
        groups: docker
        append: yes
    - name: "[Docker] Add Socket Permission"
      file:
        path: /var/run/docker.sock
        mode: 666
    - name: "[Docker] Restart ssh connection"
      meta: reset_connection
    - name: Reload daemon
      command: systemctl daemon-reload
      become: true
    - name: Enable and Start docker
      service:
        name: docker
        enabled: yes
        state: started
      become: true
    - name: "[Kubernetes] Start minicube"
      command: minikube start -p minikube docker-env
      become: no
    - name: "[Maven Build] Build maven"
      shell: "./mvnw clean package -DskipTests"
      ignore_errors: yes
      args:
        chdir: /vagrant/
      register: maven_build_result
    - name: "[Docker] Build database docker image"
      shell: "eval $(minikube -p minikube docker-env) && docker build -t {{db.image_name}}:{{db.image_tag}} {{db.path}}"
      become: no
    - name: "[Docker] Build backend docker image"
      shell: "eval $(minikube -p minikube docker-env) && docker build -t {{backend.image_name}}:{{backend.image_tag}} {{backend.path}}"
      become: no
    - name: "[Kubernetes] Apply Kubernetes Configuration"
      shell: kubectl apply -f /vagrant/kuard.yaml
      become: no
    - name: "[Kubernetes] Start Proxy Service"
      service:
        name: "{{proxy_service_name}}"
        enabled: yes
        state: started
    - name: "[Kubernetes] Start Dashboard Service"
      service:
        name: "{{dashboard_service_name}}"
        enabled: yes
        state: started