- name: Cinema Tickets App Backend
  hosts: all
  user: vagrant
  vars:
    service_name: 'cinema_tickets_app'
    service_working_dir: '/usr/bin'
    maven_build_log: '/vagrant/build.log'
    service_executable_path: '{{service_working_dir}}/cinema_tickets_app.jar'
    service_conf_path: '/etc/default/cinema_tickets_app.conf'
    service_log_path: '/vagrant/cinema_tickets_app.log'
    service_dest_path: '/etc/systemd/system/{{service_name}}.service'
    executable_version: '0.0.1-SNAPSHOT'
  tasks:
    - name: Waiting for lock file {{lock_file_path}} before starting configuration
      wait_for:
        path: "{{lock_file_path}}"
    - name: Install Java (with update cache)
      apt:
        name: openjdk-11-jdk-headless
        update_cache: yes
      become: yes
    - name: Cleanup (Delete existing files)
      file:
        path: "{{item}}"
        state: absent
      with_items:
        - "{{service_executable_path}}"
        - "{{service_conf_path}}"
        - "{{service_log_path}}"
        - "{{service_dest_path}}"
        - "{{maven_build_log}}"
      become: true
    - name: Check if service {{service_name}} is running
      command: "systemctl is-active {{service_name}}"
      ignore_errors: yes
      register: service_active_result
      become: yes
    - name: 'Check result'
      debug:
        var: "{{service_active_result.stdout}}"
    - name: Stop service {{service_name}} if it's running
      service:
        name: "{{service_name}}"
        state: stopped
      become: yes
      when: service_active_result.stdout == 'active'
    - name: "[Maven Build] Build maven"
      shell: "./mvnw clean package -DskipTests"
      ignore_errors: yes
      args:
        chdir: /vagrant/
      register: maven_build_result
    # - name: "[Maven Build] Create log file"
    #   file:
    #     path: "{{maven_build_log}}"
    #     state: touch
    # - name: "[Maven Build] Dump log info"
    #   lineinfile:
    #     dest: "{{maven_build_log}}"
    #     line: "{{item}}"
    #   with_items: "{{maven_build_result.stdout_lines}}"
    - name: "Copy executable (Version: {{executable_version}})"
      copy:
        src: "{{item}}"
        dest: "{{service_executable_path}}"
        mode: 0777
      become: true
      with_fileglob: /vagrant/backend/target/cinema-tickets-core-{{executable_version}}.jar
    - name: Create service configuration file
      file:
        path: "{{service_conf_path}}"
        state: touch
      become: true
    - name: Save service configuration parameters to {{service_conf_path}}
      lineinfile:
        dest: "{{service_conf_path}}"
        line: "{{item}}"
      with_items:
        - "DB_NAME={{db.name}}"
        - "DB_USER={{db.username}}"
        - "DB_PASSWORD={{db.password}}"
        - "DB_HOST={{db.host}}"
        - "DB_PORT={{db.port}}"
        - "WORKING_DIR={{service_working_dir}}"
        - "CONF_PATH={{service_conf_path}}"
        - "EXECUTABLE_PATH={{service_executable_path}}"
        - "LOG_PATH={{service_log_path}}"
      become: true
    - name: "Copy {{service_name}}.service file to {{service_dest_path}}"
      copy:
        src: "{{service_src_path}}"
        dest: "{{service_dest_path}}"
        mode: 0777
      become: true
    - name: Inject provision parameters to {{service_dest_path}}
      replace:
        path: "{{service_dest_path}}"
        regexp: "{{item.from}}"
        replace: "{{item.to}}"
      with_items:
        - { from: '@WORKING_DIR@', to: '{{service_working_dir}}'}
        - { from: '@CONF_PATH@', to: '{{service_conf_path}}'}
        - { from: '@EXECUTABLE_PATH@', to: '{{service_executable_path}}'}
        - { from: '@LOG_PATH@', to: '{{service_log_path}}'}
      become: true
    - name: Reload daemon
      command: systemctl daemon-reload
      become: true
    - name: Enable and Start service
      service:
        name: "{{service_name}}"
        enabled: yes
        state: started
      become: true